// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: user.proto

package server

import (
	"context"

	"dataverse/service/user/rpc/internal/logic"
	"dataverse/service/user/rpc/internal/svc"
	"dataverse/service/user/rpc/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Create(ctx context.Context, in *user.CreateRequest) (*user.CreateResponse, error) {
	l := logic.NewCreateLogic(ctx, s.svcCtx)
	return l.Create(in)
}

func (s *UserServer) Update(ctx context.Context, in *user.UpdateRequest) (*user.UpdateResponse, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

func (s *UserServer) Delete(ctx context.Context, in *user.DeleteRequest) (*user.DeleteResponse, error) {
	l := logic.NewDeleteLogic(ctx, s.svcCtx)
	return l.Delete(in)
}

func (s *UserServer) LoginByEmail(ctx context.Context, in *user.LoginByEmailRequest) (*user.LoginResponse, error) {
	l := logic.NewLoginByEmailLogic(ctx, s.svcCtx)
	return l.LoginByEmail(in)
}

func (s *UserServer) LoginByMobile(ctx context.Context, in *user.LoginByMobileRequest) (*user.LoginResponse, error) {
	l := logic.NewLoginByMobileLogic(ctx, s.svcCtx)
	return l.LoginByMobile(in)
}

func (s *UserServer) UserInfo(ctx context.Context, in *user.UserInfoRequest) (*user.UserInfoResponse, error) {
	l := logic.NewUserInfoLogic(ctx, s.svcCtx)
	return l.UserInfo(in)
}

func (s *UserServer) List(ctx context.Context, in *user.ListRequest) (*user.ListResponse, error) {
	l := logic.NewListLogic(ctx, s.svcCtx)
	return l.List(in)
}
